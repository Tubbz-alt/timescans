#!/usr/bin/env python

import os
import re
import time
import sys
import subprocess
from glob import glob

hutch = 'cxi'
expt  = 'cxij8816'

XTC_DIR      = '/reg/d/psdm/%s/%s/xtc' % (hutch, expt)
STATS_DIR    = '/reg/d/psdm/%s/%s/res/stats' % (hutch, expt)
MIN_RUN      = 37

def submit_job(bsub_command_str, queue='psfehhiprioq'):

    p = subprocess.check_call(['bsub', '-q %s' % queue, 'a mympi -n 12', bsub_command_str],
                              stdout=subprocess.PIPE)
    if not p == 0:
        print "bsub returned non-zero exit code: there was an error with your job submission!"
    return


while True:

    # check to make sure we don't have >6 jobs submitted...
    r = subprocess.Popen(["bjobs | wc -l"], shell=True,
                         stdout=subprocess.PIPE, 
                         stderr=subprocess.PIPE)
    if len(r.communicate()) > 7:
         print '8+ jobs in queue, sleeping...'
         time.sleep(60)
         continue

    new_runs = []
    xtcs = glob(os.path.join(XTC_DIR, '*.xtc'))

    for xtc in xtcs:
        run = int( re.search('-r(\d+)-', xtc).group(1) )
        if not os.path.exists( os.path.join(STATS_DIR, 'run%04d.csv' % run) ):
            if (run not in new_runs) and (run > MIN_RUN):
                new_runs.append(run)

    if len(new_runs) > 0:
        print 'Processing new runs: %s' % (' '.join([str(r) for r in new_runs]))
        for r in new_runs:
            try:
                submit_job('ts.analyzerun -r %d' % int(r))
            except Exception as e:
                print 'error trying to submit jobs:'
                print e

    time.sleep(60)





